//------------------------------------------------------------------------------
// Best Contrast
// Source: https://gist.github.com/voxpelli/6304812
//------------------------------------------------------------------------------

@function best-contrast($base, $colors, $tolerance: 0) {
	$contrast: color-contrast($base, nth($colors, 1));
	$best: nth($colors, 1);
	@for $i from 2 through length($colors) {
		$current-contrast: color-contrast($base, nth($colors, $i));
		@if ($current-contrast - $contrast > $tolerance) {
			$contrast: color-contrast($base, nth($colors, $i));
			$best: nth($colors, $i);
		}
	}
	@return $best;
}

//------------------------------------------------------------------------------
// Color Luminance
// Source: https://gist.github.com/voxpelli/6304812
//------------------------------------------------------------------------------

@function color-luminance($color) {
	$rgba: red($color), green($color), blue($color);
	$rgba2: ();
	@for $i from 1 through 3 {
		$rgb: nth($rgba, $i);
		$rgb: $rgb / 255;
		$rgb: if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));
		$rgba2: append($rgba2, $rgb);
	}
	@return .2126 * nth($rgba2, 1) + .7152 * nth($rgba2, 2) + 0.0722 * nth($rgba2, 3);
}

//------------------------------------------------------------------------------
// Color Contrast
// Source: https://gist.github.com/voxpelli/6304812
//------------------------------------------------------------------------------

@function color-contrast($color1, $color2) {
	$luminance1: color-luminance($color1) + .05;
	$luminance2: color-luminance($color2) + .05;
	$ratio: $luminance1 / $luminance2;
	@if $luminance2 > $luminance1 {
		$ratio: 1 / $ratio;
	}
	$ratio: round($ratio * 10) / 10;
	@return $ratio;
}

//------------------------------------------------------------------------------
// Greatest Common Divisor
// Source: https://gist.github.com/voxpelli/6304812
//------------------------------------------------------------------------------

@function gcd($a, $b) {
	@if ($b != 0) {
		@return gcd($b, $a % $b);
	} @else {
		@return abs($a);
	}
}

//------------------------------------------------------------------------------
// Nth Root
// Source: https://gist.github.com/voxpelli/6304812
//------------------------------------------------------------------------------

@function nth-root($num, $n: 2, $prec: 12) {
	$x: 1;
	@for $i from 0 through $prec {
		$x: 1 / $n * (($n - 1) * $x + ($num / pow($x, $n - 1)));
	}
	@return $x;
}

//------------------------------------------------------------------------------
// Pow
// Source: https://gist.github.com/voxpelli/6304812
//------------------------------------------------------------------------------

@function pow($base, $exponent, $prec: 12) {
	@if (floor($exponent) != $exponent) {
		$prec2: pow(10, $prec);
		$exponent: round($exponent * $prec2);
		$denominator: gcd($exponent, $prec2);
		@return nth-root(pow($base, $exponent / $denominator), $prec2 / $denominator, $prec);
	}
	$value: $base;
	@if $exponent > 1 {
		@for $i from 2 through $exponent {
			$value: $value * $base;
		}
	} @else if $exponent < 1 {
		@for $i from 0 through -$exponent {
			$value: $value / $base;
		}
	}
	@return $value;
}

//------------------------------------------------------------------------------
// Text Contrast
//------------------------------------------------------------------------------

@function text-contrast($base, $colors: ($color-text-light, $color-text-dark)) {
	@return best-contrast($base, $colors);
}
